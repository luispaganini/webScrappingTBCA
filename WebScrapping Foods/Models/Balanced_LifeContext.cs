// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using WebScrapping_Foods.Entities;

namespace WebScrapping_Foods.Models;

public partial class Balanced_LifeContext : DbContext
{
    public Balanced_LifeContext(DbContextOptions<Balanced_LifeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Food> Foods { get; set; }

    public virtual DbSet<FoodGroup> FoodGroups { get; set; }

    public virtual DbSet<FoodNutritionInfo> FoodNutritionInfos { get; set; }

    public virtual DbSet<NutritionalComposition> NutritionalCompositions { get; set; }

    public virtual DbSet<UnitMeasurement> UnitMeasurements { get; set; }

    public async Task<List<FoodGroup>> GetAllGroupsAsync() {
        return await FoodGroups.ToListAsync();
    }

    public async Task<NutritionalComposition> GetCompositionByNameAsync(string name) {
        return await NutritionalCompositions.FirstOrDefaultAsync(g => g.Item == name);
    }

    public async Task<UnitMeasurement> GetUnitMeasurementByNameAsync(string name) {
        return await UnitMeasurements.FirstOrDefaultAsync(g => g.Name == name);
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Food>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__food__3213E83FFA8ADDD7");

            entity.ToTable("food");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Brand)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("brand");
            entity.Property(e => e.IdFoodGroup).HasColumnName("idFoodGroup");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("name");
            entity.Property(e => e.ReferenceTable)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("referenceTable");

            entity.HasOne(d => d.IdFoodGroupNavigation).WithMany(p => p.Foods)
                .HasForeignKey(d => d.IdFoodGroup)
                .HasConstraintName("food_idfoodgroup_foreign");
        });

        modelBuilder.Entity<FoodGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__foodGrou__3213E83F24B0C950");

            entity.ToTable("foodGroup");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        modelBuilder.Entity<FoodNutritionInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__foodNutr__3213E83FE3FDB4C5");

            entity.ToTable("foodNutritionInfo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFood).HasColumnName("idFood");
            entity.Property(e => e.IdNutritionalComposition).HasColumnName("idNutritionalComposition");
            entity.Property(e => e.IdUnitMeasurement).HasColumnName("idUnitMeasurement");
            entity.Property(e => e.Quantity).HasColumnName("quantity");

            entity.HasOne(d => d.IdFoodNavigation).WithMany(p => p.FoodNutritionInfos)
                .HasForeignKey(d => d.IdFood)
                .HasConstraintName("foodNutritionInfo_idfood_foreign");

            entity.HasOne(d => d.IdNutritionalCompositionNavigation).WithMany(p => p.FoodNutritionInfos)
                .HasForeignKey(d => d.IdNutritionalComposition)
                .HasConstraintName("foodNutritionInfo_nutritionalComposition_foreign");

            entity.HasOne(d => d.IdUnitMeasurementNavigation).WithMany(p => p.FoodNutritionInfos)
                .HasForeignKey(d => d.IdUnitMeasurement)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("foodnutritioninfo_idunitmeasurement_foreign");
        });

        modelBuilder.Entity<NutritionalComposition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__nutritio__3213E83FB0FE6D4E");

            entity.ToTable("nutritionalComposition");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Item)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("item");
        });

        modelBuilder.Entity<UnitMeasurement>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__unitMeas__3213E83F0B6F18AF");

            entity.ToTable("unitMeasurement");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("name");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}